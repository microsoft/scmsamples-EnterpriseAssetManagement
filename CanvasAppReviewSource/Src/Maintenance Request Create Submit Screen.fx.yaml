"'Maintenance Request Create Submit Screen' As screen":
    Fill: =gblAppColors.Background
    OnVisible: |-
        =Clear(locMRAttachmentCollection);
        IfError(
            //try
            UpdateContext(
                {
                    locWOCount: CountRows(
                        GroupBy(
                            //Filter with Asset or Functional location
                            If(
                                locCreateMode = C.Creation.CreateFromLocation,
                                Filter(
                                    'Asset management work order jobs V2 (mserp)',
                                    'Company Code' = locAsset.'Company Code',
                                    'Functional location' = locAsset.'Functional location',
                                    'Asset management work orders V2'.Active = 'NoYes (mserp)'.Yes
                                ),
                                locCreateMode = C.Creation.CreateFromAsset,
                                Filter(
                                    'Asset management work order jobs V2 (mserp)',
                                    'Company Code' = locAsset.'Company Code',
                                    Asset = locAsset.'Asset (mserp_maintenanceassetid)',
                                    'Asset management work orders V2'.Active = 'NoYes (mserp)'.Yes
                                )
                            ),
                            'Work order',
                            WorkOrderJobs
                        )
                    )
                }
            ),
            //catch
            UpdateContext({locWOCount: Blank()});
            Notify(
                Match(
                    FirstError.Details.HttpResponse,
                    "\""code"":""(?<code>[^""]*)"",""message"":""(?<message>[^""]*)"
                ).message,
                NotificationType.Error
            );
            
        );
        IfError(
            UpdateContext(
                {
                    locMRCount: CountRows(
                        If(
                            locCreateMode = C.Creation.CreateFromLocation,
                            Filter(
                                'Maintenance Requests',
                                'Functional location' = locLocation.'Functional location (mserp_functionallocationid)',
                                'Company Code' = locLocation.'Company Code',
                                Active = 'NoYes (mserp)'.Yes
                            ),
                            locCreateMode = C.Creation.CreateFromAsset,
                            Filter(
                                'Maintenance Requests',
                                Asset = locAsset.'Asset (mserp_maintenanceassetid)',
                                'Company Code' = locAsset.'Company Code',
                                Active = 'NoYes (mserp)'.Yes
                            )
                        )
                    )
                }
            ),
            //catch
            UpdateContext({locMRCount: Blank()});
            Notify(
                Match(
                    FirstError.Details.HttpResponse,
                    "\""code"":""(?<code>[^""]*)"",""message"":""(?<message>[^""]*)"
                ).message,
                NotificationType.Error
            );
            
        );
        
        Set(gblPreviousScreen, Self)

    conVerticalCreateRequest As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height - btnCreateMRSubmit.Height -16
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =10
        Width: =Parent.Width
        ZIndex: =1

        conCreateMRHeader As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =52
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width
            ZIndex: =1

            lblCreateMRHeader As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Fill: =gblAppStyles.Header.Fill
                Font: =gblAppStyles.CommonFont
                FontWeight: =gblAppStyles.Header.FontWeight
                Height: =54
                PaddingLeft: =icoCreateMRBackButton.Width
                PaddingRight: =icoCreateMRBackButton.Width
                Size: =gblAppStyles.Header.FontSize
                Text: |-
                    =//pal-disable PAL004
                    If(locCreateMode = C.Creation.CreateFromLocation, locLocation.mserp_name &" "&locLocation.mserp_functionallocationid,locCreateMode = C.Creation.CreateFromAsset,locAsset.mserp_name &" "&locAsset.mserp_maintenanceassetid)
                Width: =Parent.Width
                Wrap: =false
                X: =
                ZIndex: =4

            icoCreateMRBackButton As icon.ChevronLeft:
                AccessibleLabel: =T.BackButtonAccessibleLabel
                Color: =Color.White
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Height: =Parent.Height
                Icon: =Icon.ChevronLeft
                OnSelect: |+
                    =Concurrent(
                        Reset(cmpCreateMRDescription),
                        Reset(cmpCreateMRNotes),
                        Reset(drpCreateMRServiceLevel),
                        Reset(drpCreateMRRequestType)
                    );
                    Back();
                    
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                TabIndex: =0
                Width: =56
                X: =2
                Y: =2
                ZIndex: =5

        conCreateMRSubHeader As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =gblAppStyles.Header.Fill
            FillPortions: =0
            Height: =If(Self.Width <= conCreateMRSubHeader.LayoutMinWidth ,gblAppStyles.Pills.Height * 2 + 20 ,62)
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =If(Self.Width <= conCreateMRSubHeader.LayoutMinWidth ,LayoutDirection.Vertical,LayoutDirection.Horizontal)
            LayoutGap: =10
            LayoutMinHeight: =100
            LayoutMinWidth: =340
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =16
            PaddingRight: =16
            Width: =Parent.Width
            ZIndex: =2

            conCreateMRWorkOrders As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =42
                LayoutMinHeight: =100
                LayoutMinWidth: =100
                Width: =btnCreateMRWorkOrders.Width + 4
                ZIndex: =1

                btnCreateMRWorkOrders As button:
                    BorderThickness: =0
                    Color: =gblAppStyles.Pills.FontColor
                    DisabledColor: =gblAppStyles.Pills.DisabledColor
                    DisabledFill: =gblAppStyles.Pills.DisabledFill
                    DisplayMode: |-
                        =If(
                            locWOCount > 0,
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =gblAppStyles.Pills.Fill
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.Pills.Font
                    FontWeight: =gblAppStyles.Pills.FontWeight
                    Height: =gblAppStyles.Pills.Height
                    OnSelect: |-
                        =If(
                            locCreateMode = C.Creation.CreateFromAsset,
                            Navigate(
                                'Maintenance Request Work Order List Screen',
                                ScreenTransition.None,
                                {locCreateMode :locCreateMode, locAsset:locAsset}
                            ),
                            locCreateMode = C.Creation.CreateFromLocation,
                            Navigate(
                                'Maintenance Request Work Order List Screen',
                                ScreenTransition.None,
                                {locCreateMode :locCreateMode, locLocation:locLocation}
                            ),
                            Trace("Context missing for MR creation", TraceSeverity.Error, {CreateMode:locCreateMode})
                        )
                    PaddingLeft: =Len(Self.Text)*1.2
                    PaddingRight: =0
                    PressedBorderColor: =
                    PressedColor: =gblAppStyles.Pills.PressedColor
                    PressedFill: =gblAppStyles.Pills.PressedFill
                    RadiusBottomLeft: =1000
                    RadiusBottomRight: =1000
                    RadiusTopLeft: =1000
                    RadiusTopRight: =1000
                    Size: =gblAppStyles.FontSize_Medium
                    Text: |-
                        =If(
                            IsBlankOrError(locWOCount),
                            T.MaintenanceWorkOrdersExistingLabel,
                            Substitute(
                                T.MaintenanceWorkOrdersExistingCountLabel,
                                "{ExistingWorkOrdersCount}",
                                If(
                                    locWOCount > 99,
                                    "99+",
                                    locWOCount
                                )
                            )
                        )
                    X: =1
                    Y: =2
                    ZIndex: =1

                icoCreateMRWorkOrders As icon.DetailList:
                    Color: =gblAppColors.AccentInfo3
                    Fill: =RGBA(0,0,0,0)
                    Height: =17
                    Icon: =Icon.DetailList
                    OnSelect: =Select(btnCreateMRWorkOrders);
                    PaddingRight: =5
                    PressedFill: =gblAppStyles.Pills.PressedFill
                    Width: =29
                    X: =7
                    Y: =11
                    ZIndex: =2

            conCreateMRRequests As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =42
                LayoutMinHeight: =100
                LayoutMinWidth: =100
                Width: =btnCreateMRRequests.Width + 4
                ZIndex: =2

                btnCreateMRRequests As button:
                    BorderThickness: =0
                    Color: =gblAppStyles.Pills.FontColor
                    DisabledColor: =gblAppStyles.Pills.DisabledColor
                    DisabledFill: =gblAppStyles.Pills.DisabledFill
                    DisplayMode: |-
                        =If(
                            locMRCount > 0,
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =gblAppStyles.Pills.Fill
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.Pills.Font
                    FontWeight: =gblAppStyles.Pills.FontWeight
                    Height: =gblAppStyles.Pills.Height
                    OnSelect: |-
                        =If(
                            locCreateMode = C.Creation.CreateFromAsset,
                            Navigate(
                                'Maintenance Requests List Screen',
                                ScreenTransition.None,
                                {locCreateMode :locCreateMode, locAsset:locAsset}
                            ),
                            locCreateMode = C.Creation.CreateFromLocation,
                            Navigate(
                                'Maintenance Requests List Screen',
                                ScreenTransition.None,
                                {locCreateMode :locCreateMode, locLocation:locLocation}
                            ),
                            Trace("Context missing for MR creation", TraceSeverity.Error, {CreateMode:locCreateMode})
                        )
                    PaddingLeft: =Len(Self.Text)*1.5
                    PaddingRight: =0
                    PressedBorderColor: =
                    PressedColor: =gblAppStyles.Pills.PressedColor
                    PressedFill: =gblAppStyles.Pills.PressedFill
                    RadiusBottomLeft: =1000
                    RadiusBottomRight: =1000
                    RadiusTopLeft: =1000
                    RadiusTopRight: =1000
                    Size: =gblAppStyles.Pills.FontSize
                    Text: |-
                        =If(
                            IsBlankOrError(locMRCount),
                            T.MaintenanceRequestsExistingLabel,
                            Substitute(
                                T.MaintenanceRequestsExistingCountLabel,
                                "{ExistingRequestsCount}",
                                If(
                                    locMRCount > 99,
                                    "99+",
                                    locMRCount
                                )
                            )
                        )
                    Width: =135
                    X: =2
                    Y: =2
                    ZIndex: =1

                icoCreateMRRequests As icon.DetailList:
                    Color: |-
                        =ColorValue("#3280AB")
                    Fill: =RGBA(0,0,0,0)
                    Height: =17
                    Icon: =Icon.ToolsWrench
                    OnSelect: =Select(btnCreateMRRequests)
                    PaddingRight: =5
                    PressedFill: =gblAppStyles.Pills.PressedFill
                    Width: =29
                    X: =7
                    Y: =11
                    ZIndex: =2

        conCreateMRForm As groupContainer.verticalAutoLayoutContainer:
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =16
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            PaddingBottom: =16
            PaddingLeft: =gblAppStyles.Padding.Left
            PaddingRight: =gblAppStyles.Padding.Right
            PaddingTop: =16
            Width: =Parent.Width
            ZIndex: =3

            lblCreateMRIntro As label:
                Color: =gblAppColors.PrimaryText
                Font: =gblAppStyles.CommonFont
                Height: =25
                PaddingBottom: =0
                PaddingTop: =0
                Size: =gblAppStyles.FontSize_Large
                Text: =T.MRCreationInstructionLabel
                Width: =Parent.Width
                ZIndex: =1

            cmpCreateMRDescription As TextInputWithLabel:
                AccessibleLabel: =T.MRDescriptionAccessibleLabel
                backgroundColor: =gblAppColors.Neutral
                dividerColor: =gblAppColors.AccentLink
                Height: =54
                labelColor: =gblAppStyles.Label.FontColor
                labelFontSize: =gblAppStyles.Label.FontSize
                labelText: =T.MRDescriptionHeaderLabel
                LayoutMinHeight: =40
                LayoutMinWidth: =11
                MaxLength: =60
                multiLine: =false
                textFont: =gblAppStyles.Label.Font
                textFontSize: =gblAppStyles.FontSize_Large
                Width: =Parent.Width - Parent.PaddingLeft*2
                Y: =16
                ZIndex: =2

            cmpCreateMRNotes As TextInputWithLabel:
                AccessibleLabel: =T.MRNotesAccessibleLabel
                backgroundColor: =gblAppColors.Neutral
                dividerColor: =gblAppColors.AccentLink
                Height: =108
                labelColor: =gblAppStyles.Label.FontColor
                labelFontSize: =gblAppStyles.Label.FontSize
                labelText: =T.MRNotesHeaderLabel
                LayoutMinHeight: =50
                LayoutMinWidth: =10
                MaxLength: =Blank()
                textColor: =gblAppColors.PrimaryText
                textFont: =gblAppStyles.DefaultText.Font
                textFontSize: =gblAppStyles.FontSize_Large
                Width: =Parent.Width - Parent.PaddingLeft*2
                Y: =16
                ZIndex: =3

            conCreateMRServiceLevel As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                Fill: =gblAppColors.Neutral
                FillPortions: =0
                Height: =72
                LayoutMinHeight: =60
                LayoutMinWidth: =250
                PaddingBottom: =(conCreateMRServiceLevel.Height - lblCreateMRServiceLevel.Height - drpCreateMRServiceLevel.Height)/2
                PaddingTop: =(conCreateMRServiceLevel.Height - lblCreateMRServiceLevel.Height - drpCreateMRServiceLevel.Height)/2
                Width: =Parent.Width - Parent.PaddingLeft*2
                ZIndex: =4

                shpNewMRServiceLevelBottomBorder As rectangle:
                    Fill: =gblAppColors.AccentLink
                    Height: =2
                    Width: =Parent.Width
                    Y: =Parent.Height - Self.Height
                    ZIndex: =1

                drpCreateMRServiceLevel As dropdown:
                    AccessibleLabel: =T.MRServiceLevelAccessibleLabel
                    BorderThickness: =0
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =gblAppColors.Accent
                    Color: =gblAppColors.Accent
                    Default: =locDefaultServiceLevel
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.CommonFont
                    Height: =32
                    Items: |-
                        =Switch(
                            locCreateMode,
                            C.Creation.CreateFromAsset,
                            Filter('Work Order Service Levels', mserp_dataareaid = locAsset.mserp_dataareaid),
                            C.Creation.CreateFromLocation,
                            Filter('Work Order Service Levels', mserp_dataareaid = locLocation.mserp_dataareaid)
                        )
                    PaddingLeft: =8
                    PressedColor: =Self.Color
                    PressedFill: =gblAppColors.Neutral
                    SelectionFill: =gblAppColors.Accent
                    Size: =gblAppStyles.FontSize_Large
                    Width: =Parent.Width-8
                    Y: =27
                    ZIndex: =2

                lblCreateMRServiceLevel As label:
                    Color: =gblAppStyles.Label.FontColor
                    Font: =gblAppStyles.Label.Font
                    Height: =27
                    PaddingLeft: =8
                    Size: =gblAppStyles.Label.FontSize
                    Text: =T.ServiceLevelLabel
                    Width: =225
                    ZIndex: =3

            conCreateMRRequestType As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                Fill: =gblAppColors.Neutral
                FillPortions: =0
                Height: =72
                LayoutMinHeight: =60
                LayoutMinWidth: =250
                PaddingLeft: =8
                PaddingRight: =10
                Width: =Parent.Width - Parent.PaddingLeft*2
                ZIndex: =5

                shpNewMRRequestTypeBottomBorder As rectangle:
                    Fill: =gblAppColors.AccentLink
                    Height: =2
                    Width: =Parent.Width
                    Y: =Parent.Height - Self.Height
                    ZIndex: =1

                drpCreateMRRequestType As dropdown:
                    AccessibleLabel: =T.MRRequestTypeAccessibleLabel
                    BorderThickness: =0
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =gblAppColors.Accent
                    Color: =gblAppColors.Accent
                    Default: =locDefaultRequestType
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.CommonFont
                    Height: =31
                    Items: |-
                        =Switch(
                            locCreateMode,
                            C.Creation.CreateFromAsset,
                            Filter(
                                'Maintenance Request Types',
                                mserp_dataareaid = locAsset.mserp_dataareaid
                            ),
                            C.Creation.CreateFromLocation,
                            Filter(
                                'Maintenance Request Types',
                                mserp_dataareaid = locLocation.mserp_dataareaid
                            )
                        )
                    PaddingLeft: =8
                    PressedColor: =Self.Color
                    PressedFill: =gblAppColors.Neutral
                    SelectionFill: =gblAppColors.Accent
                    Size: =gblAppStyles.FontSize_Large
                    Width: =Parent.Width-8
                    Y: =27
                    ZIndex: =2

                lblCreateMRRequestType As label:
                    Color: =gblAppStyles.Label.FontColor
                    Font: =gblAppStyles.Label.Font
                    Height: =27
                    PaddingLeft: =8
                    Size: =gblAppStyles.Label.FontSize
                    Text: =T.MRRequestTypeHeaderLabel
                    Width: =Parent.Width
                    ZIndex: =3

            "galMRCreateAttachments As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver4.0'":
                '#CopilotOverlayLabel': ="Filtered"
                AccessibleLabel: =T.MRAttachmentsAccessibleLabel
                Height: =260
                Items: =locMRAttachmentCollection
                LayoutMinHeight: =260
                LayoutMinWidth: =300
                TemplatePadding: =0
                TemplateSize: =Min(440, Self.Height - 60)
                Visible: =Not IsEmpty(locMRAttachmentCollection)
                ZIndex: =7

                imgMRCreateAttachments As image:
                    ApplyEXIFOrientation: =false
                    Height: =imgMRCreateAttachments.Width
                    Image: =ThisItem.Value
                    ImagePosition: =ImagePosition.Stretch
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth - 16
                    Y: =16
                    ZIndex: =1

                imgRemoveImage As image:
                    AccessibleLabel: =T.RemoveItemIconAccessibleLabel
                    Height: =36
                    Image: =removeImage
                    OnSelect: =Remove(locMRAttachmentCollection,ThisItem)
                    PressedFill: =ColorFade(Self.Fill, -30%)
                    Width: =36
                    X: =imgMRCreateAttachments.Width - imgRemoveImage.Width -5
                    Y: =imgMRCreateAttachments.Y + 5
                    ZIndex: =2

            grpCreateMRAddImage As group:
                Height: =5
                LayoutMinHeight: =5
                LayoutMinWidth: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =7

                imgCreateMRAddImage As image:
                    ApplyEXIFOrientation: =false
                    Height: =Self.Width
                    Image: =If(!IsBlank(btnCreateMRAddImage.Media), btnCreateMRAddImage.Media)
                    LayoutMinHeight: =50
                    Visible: =false
                    Width: =Min(300,Parent.Width -16*2)
                    X: =btnCreateMRAddImage.X
                    Y: =btnCreateMRAddImage.Y
                    ZIndex: =6

                btnCreateMRAddImage As addMedia:
                    AccessibleLabel: =T.MRAddImageAccessibleLabel
                    BorderColor: =gblAppColors.Primary
                    ChangePictureText: =T.MRAddImageButtonLabel
                    Color: =gblAppColors.Primary
                    Fill: =gblAppColors.Background
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.CommonFont
                    Height: =gblAppStyles.Button.Height
                    LayoutMinHeight: =50
                    LayoutMinWidth: =100
                    OnSelect: |+
                        =UpdateContext({ locImageData: JSON(imgCreateMRAddImage.Image, JSONFormat.IncludeBinaryData) });
                        UpdateContext({ locImageBase64: Mid(locImageData, Find(",", locImageData) + 1, Len(locImageData) - Find(",", locImageData) - 1) });
                        UpdateContext({ locFileExtension: Mid(locImageData, Find("/", locImageData) + 1, Find(";base64,", locImageData) - Find("/", locImageData) - 1) });
                        
                        If(
                            Len(locImageBase64) >= DataSourceInfo(
                                'Asset management maintenance request document attachments entity (mserp)',
                                DataSourceInfo.MaxLength,
                                Bitmap
                            ),
                            Notify(T.Error_PhotoTooLargeToAttach, NotificationType.Warning),
                            Collect(
                                locMRAttachmentCollection,
                                {
                                    Value: btnCreateMRAddImage.Media,
                                    ImageData: locImageData,
                                    ImageBase64: locImageBase64,
                                    FileExtension: locFileExtension,
                                    FileName: GUID() & "." & locFileExtension
                                }
                            )
                        )
                        
                    Padding: =10
                    Size: =gblAppStyles.Button.FontSize
                    Text: =T.MRAddImageButtonLabel
                    Width: =Min(300,Parent.Width -16*2)
                    X: =40
                    Y: =40
                    ZIndex: =8

    btnCreateMRSubmit As button:
        BorderThickness: =0
        Color: =gblAppStyles.Button.FontColor
        Fill: =gblAppStyles.Button.Fill
        FocusedBorderColor: =gblAppStyles.FocusBorderColor
        FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
        Font: =gblAppStyles.CommonFont
        FontWeight: =gblAppStyles.Button.FontWeight
        Height: =gblAppStyles.Button.Height
        OnSelect: |
            =UpdateContext (
                {
                    locCreatedRequest: Patch(
                        'Maintenance Requests',
                        Defaults('Maintenance Requests'),
                        If(
                            locCreateMode = C.Creation.CreateFromAsset,
                            {
                                Description: cmpCreateMRDescription.Text,
                                Note: cmpCreateMRNotes.Text,
                                'Service level': drpCreateMRServiceLevel.Selected.'Service level',
                                'Maintenance request type': drpCreateMRRequestType.Selected.'Maintenance request type',
                                'Company Code': locAsset.'Company Code',
                                'Functional location': locAsset.'Functional location',
                                Asset: locAsset.'Asset (mserp_maintenanceassetid)',
                                'Actual start': DateAdd( // UserTime => UTC
                                    Now(),
                                    TimeZoneOffset(),
                                    TimeUnit.Minutes
                                )
                            },
                            locCreateMode = C.Creation.CreateFromLocation,
                            {
                                Description: cmpCreateMRDescription.Text,
                                Note: cmpCreateMRNotes.Text,
                                'Service level': drpCreateMRServiceLevel.Selected.'Service level',
                                'Maintenance request type': drpCreateMRRequestType.Selected.'Maintenance request type',
                                'Company Code': locLocation.'Company Code',
                                'Functional location': locLocation.'Functional location (mserp_functionallocationid)',
                                'Actual start': DateAdd( // UserTime => UTC
                                    Now(),
                                    TimeZoneOffset(),
                                    TimeUnit.Minutes
                                )
                            },
                            {}
                        )
                    )
                }
            );
            IfError (
                    //try
                locCreatedRequest,
                    //On error
                Notify(
                    Match(
                        FirstError.Details.HttpResponse,
                        "\""code"":""(?<code>[^""]*)"",""message"":""(?<message>[^""]*)"
                    ).message,
                    NotificationType.Error
                ),
                If(
                    !IsEmpty(locMRAttachmentCollection) And !IsBlank(locCreatedRequest),
                    UpdateContext(
                        {
                            locDocuTypes: ShowColumns(
                                Filter(
                                    'Document types (mserp)',
                                    'Company Code' = locCreatedRequest.'Company Code'
                                ),
                                ActionClassName,
                                'Company Code',
                                Type
                            )
                        }
                    );
                    UpdateContext(
                        {
                            locDocuType: LookUp(
                                locDocuTypes,
                                mserp_actionclassname = "DocuActionArchive"
                            )
                        }
                    );
                    If(
                        IsBlankOrError(locDocuType),
                            //System is not configured for file attachments
                        Notify(T.Error_AttachmentCreationFailureFromMissingDocumentTypeConfiguration);
                        Trace(
                            "Unable to create attachments as document type configuration is missing",
                            TraceSeverity.Error
                        ),
                        UpdateContext(
                            {
                                locImageBase64: Mid(
                                    locImageData,
                                    Find(
                                        ",",
                                        locImageData
                                    ) + 1,
                                    Len(locImageData) - Find(
                                        ",",
                                        locImageData
                                    ) - 1
                                )
                            }
                        );
                        UpdateContext(
                            {
                                locFileExtension: Mid(
                                    locImageData,
                                    Find(
                                        "/",
                                        locImageData
                                    ) + 1,
                                    Find(
                                        ";base64,",
                                        locImageData
                                    ) - Find(
                                        "/",
                                        locImageData
                                    ) - 1
                                )
                            }
                        );
                        ForAll(
                            locMRAttachmentCollection As attachment,
                            Patch(
                                'Asset management maintenance request document attachments entity (mserp)',
                                Defaults('Asset management maintenance request document attachments entity (mserp)'),
                                {
                                    'Company Code': locCreatedRequest.'Company Code',
                                    DocumentAttachmentTypeLegalEntityId: locDocuType.mserp_dataareaid,
                                    Type: locDocuType.mserp_id,
                                    Bitmap: attachment.ImageBase64,
                                    'Original file name': attachment.FileName,
                                    'Maintenance request': locCreatedRequest.'Maintenance request',
                                    Description: attachment.FileName
                                }
                            )
                        );
                    )
                );
                Clear(locMRAttachmentCollection);
                Reset(cmpCreateMRDescription);
                Reset(cmpCreateMRNotes);
                Reset(drpCreateMRServiceLevel);
                Reset(drpCreateMRRequestType);
                Navigate(
                    'Creation Success Screen',
                    ScreenTransition.None,
                    {
                        locHeaderText: lblCreateMRHeader.Text,
                        locCreatedId: locCreatedRequest.'Maintenance request',
                        locCreatedType: C.Creation.CreateMaintenanceRequest
                    }
                );
                
            );
        Size: =gblAppStyles.Button.FontSize
        Text: =T.SubmitButtonLabel
        Width: =Min(300,Parent.Width -16*2)
        X: =(Parent.Width / 2) - (Self.Width/2)
        Y: =conVerticalCreateRequest.Height
        ZIndex: =2

