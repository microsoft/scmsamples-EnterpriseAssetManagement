"'Work Order Job Item Consumption Edit Screen' As screen":
    Fill: =gblAppColors.Background
    OnHidden: |-
        =Reset(txtAdjustedQuantity);
        Reset(cmpTrackingBatchNumber);
        Reset(cmpTrackingSerialNumber);
    OnVisible: |
        =UpdateContext(
            {
                varNewQuantity: Blank(),
                varSelectedSiteId: ItemConsumption.Site,
                varSelectedWarehouseId: ItemConsumption.Warehouse,
                varSelectedLocationId: ItemConsumption.Location,
                // TODO: once the following bug is fixed, we can fetch the NoYes directly on the relation:
                // https://msazure.visualstudio.com/OneAgile/_workitems/edit/16878631
                varTrackingDimension: LookUp(
                    'Tracking dimension groups (mserp)',
                    Name = Product.'Tracking dimension group'
                ),
                varShowSiteChangePrompt: false,
                varShowWarehouseChangePrompt: false,
                varShowLocationChangePrompt: false
            }
        );
        
        // should go last
        Set(
            gblPreviousScreen,
            Self
        );

    conScrollableWOJICES As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height - cmpHeaderWOJICES.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        Width: =Parent.Width
        Y: =cmpHeaderWOJICES.Height
        ZIndex: =3

        conInformationWOJICES As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: |-
                =Max(
                    Parent.Height - Self.Y - conActionsWOJICES.Height,
                    With(
                        {
                            controlHeights: [
                                conItemDetails.Height,
                                conInventoryDimensions.Height,
                                conTrackingDimensions.Height
                            ]
                        },
                        Sum(
                            controlHeights,
                            Value
                        ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(controlHeights)
                    )
                )
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: |-
                =With(
                        {
                            controlHeights: [
                                conItemDetails.Height,
                                conInventoryDimensions.Height,
                                conTrackingDimensions.Height
                            ]
                        },
                        Sum(
                            controlHeights,
                            Value
                        ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(controlHeights)
                    )
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            PaddingLeft: |-
                =// Yes, specifically 9- to simulate a padding of 16px when the card shadow is taken into account
                9
            PaddingRight: =9
            PaddingTop: =14
            Width: =Parent.Width
            X: =
            Y: =49
            ZIndex: =1

            conItemDetails As groupContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conItemDetailsHeader.Height
                LayoutMinHeight: =124
                LayoutMinWidth: =250
                Width: =1366
                ZIndex: =1

                htmCardBackgroundHeaderWOJICES As htmlViewer:
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Height: =conItemDetails.Height
                    HtmlText: |-
                        ="<div style=""padding: 5px 8px 10px;height:100%;position:absolute;width:100%;box-sizing:border-box;""><div style=""background-color:#fff;box-shadow:0px 2px 4px rgba(0,0,0,0.14),0px 0px 2px rgba(0,0,0, 0.12);border-radius:15px;height:100%;width:100%;""></div></div>"
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =conInformationWOJICES.Visible
                    Width: =Parent.Width
                    ZIndex: =1

                conItemDetailsHeader As groupContainer.verticalAutoLayoutContainer:
                    Height: |-
                        =With(
                            {
                                controlHeights: [
                                    cmpProductNumber.Height,
                                    cmpProductName.Height
                                ]
                            },
                            Sum(
                                controlHeights,
                                Value
                            ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(controlHeights)
                        )
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =5
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =20
                    PaddingLeft: =20
                    PaddingRight: =20
                    PaddingTop: =24
                    Width: =Parent.Width
                    ZIndex: =3

                    cmpProductNumber As EditableTextWithHeader:
                        AllowEditing: =false
                        EditButtonAccessibleLabel: =Blank()
                        HeaderFontSize: =gblAppStyles.Label.FontSize
                        HeaderText: =T.ProductNumberLabel
                        LayoutMinHeight: =640
                        LayoutMinWidth: =640
                        TextFontSize: =gblAppStyles.FontSize_Medium
                        TextValue: =ItemConsumption.mserp_productnumber
                        Width: =1348

                    cmpProductName As EditableTextWithHeader:
                        AllowEditing: =false
                        EditButtonAccessibleLabel: =Blank()
                        HeaderFontSize: =gblAppStyles.Label.FontSize
                        HeaderText: =T.ProductNameLabel
                        LayoutMinHeight: =640
                        LayoutMinWidth: =640
                        TextFontSize: =gblAppStyles.FontSize_Medium
                        TextValue: =Product.mserp_productname
                        Width: =1348
                        ZIndex: =2

            conInventoryDimensions As groupContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conInventoryDimensionsVertical.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Width: =1366
                ZIndex: =2

                htmCardBackgroundInventDimsWOJICES As htmlViewer:
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Height: =conInventoryDimensions.Height
                    HtmlText: |-
                        ="<div style=""padding: 5px 8px 10px;height:100%;position:absolute;width:100%;box-sizing:border-box;""><div style=""background-color:#fff;box-shadow:0px 2px 4px rgba(0,0,0,0.14),0px 0px 2px rgba(0,0,0, 0.12);border-radius:15px;height:100%;width:100%;""></div></div>"
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    Visible: =conInformationWOJICES.Visible
                    Width: =Parent.Width
                    ZIndex: =1

                conInventoryDimensionsVertical As groupContainer.verticalAutoLayoutContainer:
                    Height: |-
                        =With(
                            {
                                controlHeights: [
                                    cmpInventorySiteEditable.Height,
                                    cmpInventoryWarehouseEditable.Height,
                                    If(cmpInventoryLocationEditable.Visible, cmpInventoryLocationEditable.Height, Blank())
                                ]
                            },
                            Sum(
                                controlHeights,
                                Value
                            ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(Filter(controlHeights, Not IsBlank(ThisRecord)))
                        )
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =8
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =20
                    PaddingLeft: =20
                    PaddingRight: =20
                    PaddingTop: =24
                    Width: =Parent.Width
                    ZIndex: =3

                    cmpInventorySiteEditable As EditableTextWithHeader:
                        AlignInContainer: =AlignInContainer.Start
                        EditButtonAccessibleLabel: =T.EditItemConsumptionSiteButtonAccessibleLabel
                        HeaderFontSize: =gblAppStyles.Label.FontSize
                        HeaderText: =T.StorageSiteLabel
                        LayoutMinHeight: =640
                        LayoutMinWidth: =640
                        OnSelectEdit: |
                            =UpdateContext(
                                {
                                    varShowSiteChangePrompt: true,
                                    varIsLoadingAvailableSites: true,
                                    varAvailableSites: Blank()
                                }
                            );
                            UpdateContext(
                                {
                                    varAvailableSites: AddColumns(
                                        RenameColumns(
                                            Filter(
                                                'Sites V2 (mserp)',
                                                'Company Code' = ItemConsumption.'Company Code'
                                            ),
                                            Site,
                                            key
                                        ),
                                        label,
                                        $"{key}: {Name}"
                                    )
                                }
                            );
                            UpdateContext({varIsLoadingAvailableSites: false});
                        TextFontSize: =gblAppStyles.FontSize_Medium
                        TextValue: =varSelectedSiteId
                        Width: =Parent.Width - Parent.PaddingLeft * 2

                    cmpInventoryWarehouseEditable As EditableTextWithHeader:
                        AlignInContainer: =AlignInContainer.Start
                        EditButtonAccessibleLabel: =T.EditItemConsumptionWarehouseButtonAccessibleLabel
                        HeaderFontSize: =gblAppStyles.Label.FontSize
                        HeaderText: =T.StorageWarehouseLabel
                        LayoutMinHeight: =640
                        LayoutMinWidth: =640
                        OnSelectEdit: |
                            =UpdateContext(
                                {
                                    varShowWarehouseChangePrompt: true,
                                    varIsLoadingAvailableWarehouses: true,
                                    varAvailableWarehouses: Blank()
                                }
                            );
                            UpdateContext(
                                {
                                    varAvailableWarehouses: AddColumns(
                                        RenameColumns(
                                            Filter(
                                                'Warehouses (mserp)',
                                                'Company Code' = ItemConsumption.'Company Code',
                                                Site = varSelectedSiteId
                                            ),
                                            Warehouse,
                                            key
                                        ),
                                        label,
                                        $"{key}: {Name}"
                                    )
                                }
                            );
                            UpdateContext({varIsLoadingAvailableWarehouses: false});
                        TextFontSize: =gblAppStyles.FontSize_Medium
                        TextValue: =varSelectedWarehouseId
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        ZIndex: =2

                    cmpInventoryLocationEditable As EditableTextWithHeader:
                        AlignInContainer: =AlignInContainer.Start
                        EditButtonAccessibleLabel: =T.StorageEditLocationAccessibleLabel
                        HeaderFontSize: =gblAppStyles.Label.FontSize
                        HeaderText: =T.StorageLocationHeaderLabel
                        LayoutMinHeight: =640
                        LayoutMinWidth: =640
                        OnSelectEdit: |
                            =UpdateContext(
                                {
                                    varShowLocationChangePrompt: true,
                                    varIsLoadingAvailableLocations: true,
                                    varAvailableLocations: Blank()
                                }
                            );
                            UpdateContext(
                                {
                                    varAvailableLocations: AddColumns(
                                        RenameColumns(
                                            Filter(
                                                'Warehouse locations (mserp)',
                                                'Company Code' = ItemConsumption.'Company Code',
                                                Warehouse = varSelectedWarehouseId
                                            ),
                                            Location,
                                            key
                                        ),
                                        label,
                                        key
                                    )
                                }
                            );
                            UpdateContext({varIsLoadingAvailableLocations: false});
                        TextFontSize: =gblAppStyles.FontSize_Medium
                        TextValue: =varSelectedLocationId
                        Visible: =IsLocationDimensionEnabled
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        ZIndex: =3

            conTrackingDimensions As groupContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conTrackingDimensionsVertical.Height
                LayoutMinHeight: =200
                LayoutMinWidth: =250
                Visible: |-
                    =varTrackingDimension.mserp_isbatchnumberactive = 'NoYes (mserp)'.Yes
                        Or varTrackingDimension.mserp_isserialnumberactive = 'NoYes (mserp)'.Yes
                Width: =1366
                ZIndex: =3

                htmCardBackgroundTrackDimsWOJICES As htmlViewer:
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Height: =conTrackingDimensions.Height
                    HtmlText: |-
                        ="<div style=""padding: 5px 8px 10px;height:100%;position:absolute;width:100%;box-sizing:border-box;""><div style=""background-color:#fff;box-shadow:0px 2px 4px rgba(0,0,0,0.14),0px 0px 2px rgba(0,0,0, 0.12);border-radius:15px;height:100%;width:100%;""></div></div>"
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    Visible: =conInformationWOJICES.Visible
                    Width: =Parent.Width
                    ZIndex: =1

                conTrackingDimensionsVertical As groupContainer.verticalAutoLayoutContainer:
                    Height: |-
                        =With(
                            {
                                controlHeights: [
                                    If(cmpTrackingBatchNumber.Visible, cmpTrackingBatchNumber.Height),
                                    If(cmpTrackingSerialNumber.Visible, cmpTrackingSerialNumber.Height)
                                ]
                            },
                            Sum(
                                controlHeights,
                                Value
                            ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(Filter(controlHeights, Value <> Blank()))
                        )
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =8
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =20
                    PaddingLeft: =20
                    PaddingRight: =20
                    PaddingTop: =24
                    Width: =Parent.Width
                    ZIndex: =3

                    cmpTrackingBatchNumber As TextInputWithLabel:
                        backgroundColor: =gblAppColors.Neutral
                        DefaultText: =ItemConsumption.mserp_trackingbatchid
                        dividerColor: =gblAppColors.AccentLink
                        Height: =54
                        HorizontalPadding: =0
                        labelColor: =gblAppStyles.Label.FontColor
                        labelFontSize: =gblAppStyles.Label.FontSize
                        labelText: =T.TrackingBatchNumberLabel
                        LayoutMinHeight: =50
                        LayoutMinWidth: =10
                        multiLine: =false
                        textColor: =gblAppColors.PrimaryText
                        textFont: =gblAppStyles.DefaultText.Font
                        textFontSize: =gblAppStyles.FontSize_Large
                        Visible: =varTrackingDimension.mserp_isbatchnumberactive = 'NoYes (mserp)'.Yes
                        Width: =Parent.Width - Parent.PaddingLeft*2
                        Y: =16

                    cmpTrackingSerialNumber As TextInputWithLabel:
                        backgroundColor: =gblAppColors.Neutral
                        DefaultText: =ItemConsumption.mserp_trackingserialid
                        dividerColor: =gblAppColors.AccentLink
                        Height: =54
                        HorizontalPadding: =0
                        labelColor: =gblAppStyles.Label.FontColor
                        labelFontSize: =gblAppStyles.Label.FontSize
                        labelText: =T.TrackingSerialNumberLabel
                        LayoutMinHeight: =50
                        LayoutMinWidth: =10
                        multiLine: =false
                        textColor: =gblAppColors.PrimaryText
                        textFont: =gblAppStyles.DefaultText.Font
                        textFontSize: =gblAppStyles.FontSize_Large
                        Visible: =varTrackingDimension.mserp_isserialnumberactive = 'NoYes (mserp)'.Yes
                        Width: =Parent.Width - Parent.PaddingLeft*2
                        Y: =16
                        ZIndex: =2

        conActionsWOJICES As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.End
            FillPortions: =0
            Height: |-
                =With(
                    {
                        controlHeights: [
                            conAdjustItemConsumptionQuantity.Height,
                            btnConfirmItemConsumptionQuantity.Height
                        ]
                    },
                    Sum(
                        controlHeights,
                        Value
                    ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(controlHeights)
                )
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutGap: =16
            LayoutMinHeight: =324
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            PaddingLeft: |-
                =// Yes, specifically 9- to simulate a padding of 16px when the card shadow is taken into account
                9
            PaddingRight: =9
            PaddingTop: =4
            Width: =Parent.Width
            X: =
            Y: =420
            ZIndex: =4

            conAdjustItemConsumptionQuantity As groupContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =conAdjustItemConsumptionQuantityVertical.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Width: =1366
                Y: =267
                ZIndex: =1

                htmCardBackgroundAdjustItemCQWOJICES As htmlViewer:
                    DisabledBorderColor: =RGBA(56, 56, 56, 1)
                    Height: =conAdjustItemConsumptionQuantity.Height
                    HtmlText: |-
                        ="<div style=""padding: 5px 8px 10px;height:100%;position:absolute;width:100%;box-sizing:border-box;""><div style=""background-color:#fff;box-shadow:0px 2px 4px rgba(0,0,0,0.14),0px 0px 2px rgba(0,0,0, 0.12);border-radius:15px;height:100%;width:100%;""></div></div>"
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    Visible: =conInformationWOJICES.Visible
                    Width: =Parent.Width
                    ZIndex: =1

                conAdjustItemConsumptionQuantityVertical As groupContainer.verticalAutoLayoutContainer:
                    Height: |-
                        =With(
                            {
                                controlHeights: [
                                    lblAdjustItemConsumptionQuantityHeader.Height,
                                    conQuantityAdjustmentHorizontal.Height
                                ]
                            },
                            Sum(
                                controlHeights,
                                Value
                            ) + Self.PaddingTop + Self.PaddingBottom + Self.LayoutGap * CountRows(controlHeights)
                        )
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =32
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =20
                    PaddingLeft: =20
                    PaddingRight: =20
                    PaddingTop: =24
                    Width: =Parent.Width
                    ZIndex: =3

                    lblAdjustItemConsumptionQuantityHeader As label:
                        Align: =Align.Center
                        Font: =gblAppStyles.CommonFont
                        FontWeight: =FontWeight.Bold
                        Size: =gblAppStyles.FontSize_XLarge
                        Text: =T.AdjustQuantityLabel
                        ZIndex: =1

                    conQuantityAdjustmentHorizontal As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =0
                        Height: =100
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutGap: =2
                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        ZIndex: =3

                        btnDecrementQuantity As button:
                            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                            BorderStyle: =gblAppStyles.ButtonSecondary.BorderStyle
                            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                            Color: =gblAppStyles.ButtonSecondary.FontColor
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FillPortions: =1
                            FocusedBorderColor: =gblAppStyles.FocusBorderColor
                            FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                            Font: |-
                                =// don't change away from this font, it fits perfectly in the center
                                // where other fonts do not (top or bottom gap)
                                Font.'Open Sans'
                            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                            LayoutMinWidth: =50
                            OnSelect: |-
                                =UpdateContext({ varNewQuantity: Coalesce(varNewQuantity, ItemConsumption.Quantity, 1) - 1 })
                            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                            RadiusBottomLeft: =Self.RadiusTopLeft
                            RadiusBottomRight: =Self.RadiusTopLeft
                            RadiusTopLeft: =gblAppStyles.ButtonSecondary.BorderRadius
                            RadiusTopRight: =Self.RadiusTopLeft
                            Size: =gblAppStyles.FontSize_Special
                            Text: ="-"
                            Tooltip: =T.AdjustQuantityDecrementTooltipLabel
                            VerticalAlign: =VerticalAlign.Top
                            ZIndex: =1

                        txtAdjustedQuantity As text:
                            AccessibleLabel: =T.AdjustQuantityAccessibleLabel
                            Align: =Align.Center
                            AlignInContainer: =AlignInContainer.Stretch
                            BorderThickness: =0
                            Default: =Coalesce(varNewQuantity, ItemConsumption.mserp_quantity, 1)
                            FillPortions: =2
                            Font: =Font.'Segoe UI'
                            Format: =TextFormat.Number
                            Height: =80
                            LayoutMinHeight: =80
                            LayoutMinWidth: =65
                            Size: =40
                            ZIndex: =2

                        btnIncrementQuantity As button:
                            BorderColor: =gblAppStyles.Button.BorderColor
                            BorderStyle: =gblAppStyles.Button.BorderStyle
                            BorderThickness: =gblAppStyles.Button.BorderThickness
                            Color: =gblAppStyles.Button.FontColor
                            Fill: =gblAppStyles.Button.Fill
                            FillPortions: =1
                            FocusedBorderColor: =gblAppStyles.FocusBorderColor
                            FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                            Font: =btnDecrementQuantity.Font
                            HoverColor: =gblAppStyles.Button.HoverColor
                            HoverFill: =gblAppStyles.Button.HoverFill
                            LayoutMinWidth: =50
                            OnSelect: |-
                                =UpdateContext({ varNewQuantity: Coalesce(varNewQuantity, ItemConsumption.Quantity, 1) + 1 })
                            PressedColor: =gblAppStyles.Button.PressedColor
                            PressedFill: =gblAppStyles.Button.PressedFill
                            RadiusBottomLeft: =Self.RadiusTopLeft
                            RadiusBottomRight: =Self.RadiusTopLeft
                            RadiusTopLeft: =gblAppStyles.Button.BorderRadius
                            RadiusTopRight: =Self.RadiusTopLeft
                            Size: =gblAppStyles.FontSize_Special
                            Text: ="+"
                            Tooltip: =T.AdjustQuantityIncrementTooltipLabel
                            ZIndex: =3

            btnConfirmItemConsumptionQuantity As button:
                BorderColor: =gblAppStyles.Button.BorderColor
                BorderStyle: =gblAppStyles.Button.BorderStyle
                BorderThickness: =gblAppStyles.Button.BorderThickness
                Color: =gblAppStyles.Button.FontColor
                DisabledColor: =gblAppStyles.Button.DisabledColor
                DisabledFill: =gblAppStyles.Button.DisabledFill
                DisplayMode: |-
                    =If(
                        IsBlank(cmpInventorySiteEditable.TextValue)
                        Or IsBlank(cmpInventoryWarehouseEditable.TextValue),
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =gblAppStyles.Button.Fill
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Font: =gblAppStyles.Button.Font
                FontWeight: =gblAppStyles.Button.FontWeight
                HoverColor: =gblAppStyles.Button.HoverColor
                HoverFill: =gblAppStyles.Button.HoverFill
                OnSelect: |-
                    =With(
                        {locAdjustedQuantity: Value(txtAdjustedQuantity.Text)},
                        If(
                            ItemConsumption.Quantity <> locAdjustedQuantity
                            Or ItemConsumption.Site <> varSelectedSiteId
                            Or ItemConsumption.Warehouse <> varSelectedWarehouseId
                            Or ItemConsumption.Location <> varSelectedLocationId
                            Or ItemConsumption.'Batch number' <> cmpTrackingBatchNumber.Text
                            Or ItemConsumption.'Serial number' <> cmpTrackingSerialNumber.Text,
                            IfError(
                                // try:
                                If(
                                    IsNewConsumptionLine,
                                    Patch(
                                        'Asset management work order job product consumption lines (mserp)',
                                        Defaults('Asset management work order job product consumption lines (mserp)'),
                                        ItemConsumption,
                                        {
                                            Quantity: locAdjustedQuantity,
                                            Site: varSelectedSiteId,
                                            Warehouse: varSelectedWarehouseId,
                                            Location: varSelectedLocationId,
                                            'Batch number': cmpTrackingBatchNumber.Text,
                                            'Serial number': cmpTrackingSerialNumber.Text
                                        }
                                    ),
                                    Patch(
                                        'Asset management work order job product consumption lines (mserp)',
                                        ItemConsumption,
                                        {
                                            Quantity: locAdjustedQuantity,
                                            Site: varSelectedSiteId,
                                            Warehouse: varSelectedWarehouseId,
                                            Location: varSelectedLocationId,
                                            'Batch number': cmpTrackingBatchNumber.Text,
                                            'Serial number': cmpTrackingSerialNumber.Text
                                        }
                                    )
                                ),
                                // catch:
                                With(
                                    {
                                        locFnOError: Coalesce(
                                            Match(
                                                FirstError.Details.HttpResponse,
                                                """code"":""(?<code>[^""]*)"",""message"":""(?<message>[^""]*)"
                                            ).message,
                                            T.Error_ItemConsumptionUpdateGenericFailureLabel
                                        )
                                    },
                                    Notify(locFnOError, NotificationType.Error);
                                    Trace(locFnOError, TraceSeverity.Error, FirstError)
                                ),
                                // on success:
                                Back()
                            )
                        );
                        
                    )
                PressedColor: =gblAppStyles.Button.PressedColor
                PressedFill: =gblAppStyles.Button.PressedFill
                RadiusBottomLeft: =Self.RadiusTopLeft
                RadiusBottomRight: =Self.RadiusTopLeft
                RadiusTopLeft: =gblAppStyles.Button.BorderRadius
                RadiusTopRight: =Self.RadiusTopLeft
                Size: =gblAppStyles.Button.FontSize
                Text: =T.ConfirmButtonLabel
                Width: =Parent.Width - Parent.PaddingLeft - Parent.PaddingRight - 16
                X: =Parent.Width / 2 - Self.Width / 2
                Y: =Parent.Height - Self.Height - 16
                ZIndex: =2

    cmpHeaderWOJICES As SubScreenHeader:
        BackButtonAccessibleLabel: =T.BackButtonAccessibleLabel
        Title: =ItemConsumption.mserp_productnumber
        Width: =Parent.Width
        ZIndex: =4

    icoRemoveItemConsumption As icon.Trash:
        AccessibleLabel: =T.RemoveItemIconAccessibleLabel
        BorderColor: =RGBA(255, 255, 255, 1)
        Color: =RGBA(255, 255, 255, 1)
        Fill: =gblAppStyles.Button.Fill
        FocusedBorderColor: =gblAppStyles.FocusBorderColor
        FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
        Height: =cmpHeaderWOJICES.Height
        Icon: =Icon.Trash
        OnSelect: |-
            =Remove('Asset management work order job product consumption lines (mserp)', ItemConsumption);
            Back()
        PaddingBottom: =16
        PaddingLeft: =16
        PaddingRight: =24
        PaddingTop: =16
        TabIndex: =0
        Width: =Self.Height + Self.PaddingRight / 2
        X: =Parent.Width - Self.Width
        ZIndex: =5

    cmpChangeItemConsumptionLocation As BottomSheetChoiceSelector:
        AvailableChoices: =varAvailableLocations
        ChoiceAccessibleName: =T.AvailableChoisesAccessibleLabel
        CurrentlySelectedChoice: =varSelectedLocationId
        FocusBorderColor: =gblAppStyles.FocusBorderColor
        Loading: =varIsLoadingAvailableLocations
        LoadingChoicesText: =T.StorageLoadingAvailableLocationsLabel
        OnCancel: |-
            =UpdateContext({ varShowLocationChangePrompt: false });
        OnSelect: |
            =UpdateContext(
                {
                    varSelectedLocationId: SelectedChoice.key,
                    varShowLocationChangePrompt: false
                }
            );
        UseStaticOrdering: =true
        Visible: =varShowLocationChangePrompt
        ZIndex: =6

    cmpChangeItemConsumptionWarehouse As BottomSheetChoiceSelector:
        AvailableChoices: =varAvailableWarehouses
        ChoiceAccessibleName: =T.AvailableChoisesAccessibleLabel
        CurrentlySelectedChoice: =varSelectedWarehouseId
        FocusBorderColor: =gblAppStyles.FocusBorderColor
        Loading: =varIsLoadingAvailableWarehouses
        LoadingChoicesText: =T.StorageLoadingAvailableWarehousesLabel
        OnCancel: |-
            =UpdateContext({ varShowWarehouseChangePrompt: false });
        OnSelect: |
            =UpdateContext(
                {
                    varSelectedWarehouseId: SelectedChoice.key,
                    // deselect lower dimensions as they no longer fit
                    varSelectedLocationId: Blank(),
                    varShowWarehouseChangePrompt: false
                }
            );
        UseStaticOrdering: =true
        Visible: =varShowWarehouseChangePrompt
        ZIndex: =7

    cmpChangeItemConsumptionSite As BottomSheetChoiceSelector:
        AvailableChoices: =varAvailableSites
        ChoiceAccessibleName: =T.AvailableChoisesAccessibleLabel
        CurrentlySelectedChoice: =varSelectedSiteId
        FocusBorderColor: =gblAppStyles.FocusBorderColor
        Loading: =varIsLoadingAvailableSites
        LoadingChoicesText: =T.StorageLoadingAvailableSitesLabel
        OnCancel: |-
            =UpdateContext({ varShowSiteChangePrompt: false });
        OnSelect: |
            =If(
                varSelectedSiteId <> SelectedChoice.key,
                UpdateContext(
                    {
                        varSelectedSiteId: SelectedChoice.key,
                        // deselect lower dimensions as they no longer fit
                        varSelectedWarehouseId: Blank(),
                        varSelectedLocationId: Blank()
                    }
                )
            );
            
            UpdateContext({varShowSiteChangePrompt: false});
        SelectedChoiceTooltip: =
        UseStaticOrdering: =true
        Visible: =varShowSiteChangePrompt
        ZIndex: =8

