"'Create Order Or Request Search Screen' As screen":
    Fill: =gblAppColors.Background
    OnVisible: |-
        =UpdateContext({ varShowAboutDialog: false });
        
        If(Not gblAppCache.IsUserMaintenanceWorker,
            UpdateContext({locScreenMode:C.Creation.SearchWithScan});
        );
        
        Reset(cmpSearchBarMRCreate);
        Reset(btnBarcodeScanner);
        
        Set(gblPreviousScreen, Self)

    conVerticalCreateMR As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Visible: =!(locScreenMode = C.Creation.SearchWithText)
        Width: =Parent.Width
        ZIndex: =4

        cmpPersonaScreenHeader As PersonaScreenHeader:
            BackButtonAccessibleLabel: =T.BackButtonAccessibleLabel
            fillColor: =gblAppStyles.Header.Fill
            FocusBorderColor: =gblAppStyles.FocusBorderColor
            FocusBorderThickness: =gblAppStyles.FocusBorderThickness
            fontSize: =gblAppStyles.Header.FontSize
            Height: =gblAppStyles.Header.Height
            LayoutMinHeight: =640
            LayoutMinWidth: =640
            OnPersonaPictureSelect: |-
                =UpdateContext({ varShowAboutDialog: true })
            PersonaAccessibleLabel: =T.SettingsLabel
            Title: =T.RequestMaintenanceLabel

        conVerticalImage As groupContainer.verticalAutoLayoutContainer:
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =200
            LayoutMode: =LayoutMode.Auto
            PaddingTop: =Min(64,conVerticalImage.Height - imgCreateRequest.Height -10)
            Width: =Parent.Width
            ZIndex: =2

            imgCreateRequest As image:
                Height: =120
                Image: ='eam-icon-192px'
                Width: =120
                X: =633
                Y: =240
                ZIndex: =1

        conVerticalButton As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =2
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =If((conVerticalButton.Height > conVerticalButton.LayoutMinHeight), LayoutDirection.Vertical, LayoutDirection.Horizontal )
            LayoutGap: =20
            LayoutJustifyContent: =LayoutJustifyContent.End
            LayoutMinHeight: =140
            LayoutMinWidth: =200
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowY: =LayoutOverflow.Scroll
            PaddingBottom: =16
            Width: =Parent.Width
            ZIndex: =3

            SearchContainer As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(25, 0, 0, 1)
                FillPortions: =0
                Height: =btnSearch.Height +10
                LayoutMinHeight: =0
                LayoutMinWidth: =0
                PaddingBottom: =2
                PaddingLeft: =
                PaddingRight: =2
                PaddingTop: =16
                Width: =Min(304,Parent.Width)
                ZIndex: =1

                btnSearch As button:
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.ButtonSecondary.FontColor
                    Fill: =gblAppStyles.ButtonSecondary.Fill
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.ButtonSecondary.Font
                    FontWeight: =gblAppStyles.ButtonSecondary.FontWeight
                    Height: =76
                    OnSelect: |
                        =UpdateContext(
                            {
                                locFilterOption: C.Creation.SearchAssets,
                                locScreenMode: C.Creation.SearchWithText,
                                locSearchBarInputText: "",
                                locCreationType: C.Creation.CreateMaintenanceRequest
                            }
                        )
                    PaddingBottom: =gblAppStyles.ButtonSecondary.Padding.Bottom
                    PaddingLeft: =36
                    PaddingRight: =gblAppStyles.ButtonSecondary.Padding.Right
                    PaddingTop: =gblAppStyles.ButtonSecondary.Padding.Top
                    RadiusBottomLeft: =Self.RadiusTopLeft
                    RadiusBottomRight: =Self.RadiusTopLeft
                    RadiusTopLeft: =gblAppStyles.ButtonSecondary.BorderRadius
                    RadiusTopRight: =Self.RadiusTopLeft
                    Size: =gblAppStyles.ButtonSecondary.FontSize
                    Text: =T.SearchLabel
                    Width: =290
                    X: =7
                    Y: =3
                    ZIndex: =1

                searchicon_1 As image:
                    Height: =24
                    HoverFill: =ColorFade(Self.Fill, 10%)
                    Image: =search
                    Width: =24
                    X: =110
                    Y: =29
                    ZIndex: =2

            ScanContainer As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(25, 0, 0, 1)
                FillPortions: =0
                Height: =btnSearch.Height +10
                LayoutMinHeight: =0
                LayoutMinWidth: =0
                PaddingBottom: =2
                PaddingRight: =2
                PaddingTop: =16
                Width: =Min(304,Parent.Width)
                ZIndex: =3

                btnBarcodeScanner As barcodeScanner:
                    Color: =gblAppStyles.Button.FontColor
                    Fill: =gblAppStyles.Button.Fill
                    FocusedBorderColor: =gblAppStyles.FocusBorderColor
                    FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                    Font: =gblAppStyles.CommonFont
                    FontWeight: =gblAppStyles.Button.FontWeight
                    Height: =76
                    OnScan: |
                        =UpdateContext(
                            {
                                locScreenMode:C.Creation.SearchWithText,
                                locFilterOption: C.Creation.SearchAssets,
                                locSearchBarInputText: btnBarcodeScanner.Value,
                                locCreationType: C.Creation.CreateMaintenanceRequest
                            }
                        );
                    PaddingLeft: =23
                    PaddingRight: =4
                    PaddingTop: =4
                    Size: =gblAppStyles.Button.FontSize
                    Text: =T.ScanLabel
                    Width: =290
                    X: =7
                    Y: =4
                    ZIndex: =1

                searchicon_2 As image:
                    Height: =24
                    Image: =qr
                    Width: =24
                    X: =110
                    Y: =30
                    ZIndex: =2

    ConVerticalSearchMR As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Visible: =locScreenMode=C.Creation.SearchWithText
        Width: =Parent.Width
        ZIndex: =5

        conHeaderSearchMR As groupContainer.manualLayoutContainer:
            Fill: =gblAppStyles.Header.Fill
            FillPortions: =0
            Height: =gblAppStyles.Header.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            ZIndex: =1

            lblTitleSearchMR As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Fill: =gblAppStyles.Header.Fill
                Font: =gblAppStyles.CommonFont
                FontWeight: =gblAppStyles.Header.FontWeight
                Height: =Parent.Height
                Size: =gblAppStyles.Header.FontSize
                Text: =If(locCreationType = C.Creation.CreateWorkOrder, T.CreateNewWorkOrderAccessibleLabel, T.RequestMaintenanceLabel)
                Width: =Parent.Width - imgStartScanButton.Width - Self.X
                Wrap: =false
                X: =icoBackButton.X + icoBackButton.Width
                ZIndex: =1

            bcsScanFillSearchField As barcodeScanner:
                BorderStyle: =gblAppStyles.Button.BorderStyle
                BorderThickness: =gblAppStyles.Button.BorderThickness
                Color: =Color.Transparent
                DisabledColor: =gblAppStyles.Button.DisabledColor
                DisabledFill: =gblAppStyles.Button.DisabledFill
                Fill: =gblAppStyles.Button.Fill
                Font: =gblAppStyles.Button.Font
                FontWeight: =gblAppStyles.Button.FontWeight
                Height: =imgStartScanButton.Height
                HoverColor: =gblAppStyles.Button.HoverColor
                HoverFill: =gblAppStyles.Button.HoverFill
                OnScan: |
                    =UpdateContext({locSearchBarInputText: bcsScanFillSearchField.Value});
                PaddingBottom: =Self.PaddingTop
                PaddingLeft: =Self.PaddingTop
                PaddingRight: =Self.PaddingTop
                PaddingTop: =0
                PressedColor: =gblAppStyles.Button.PressedColor
                PressedFill: =gblAppStyles.Button.PressedFill
                RadiusBottomLeft: =Self.RadiusTopLeft
                RadiusBottomRight: =Self.RadiusTopLeft
                RadiusTopLeft: =gblAppStyles.Button.BorderRadius
                RadiusTopRight: =Self.RadiusTopLeft
                Size: =gblAppStyles.Button.FontSize
                Text: =T.ScanLabel
                Width: =imgStartScanButton.Width
                X: =imgStartScanButton.X
                Y: =imgStartScanButton.Y
                ZIndex: =2

            imgStartScanButton As image:
                Height: =icoBackButton.Height
                Image: =qr
                OnSelect: =Select(bcsScanFillSearchField)
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                Width: =icoBackButton.Width
                X: =Parent.Width - Self.Width
                Y: =icoBackButton.Y
                ZIndex: =3

            icoBackButton As icon.ChevronLeft:
                AccessibleLabel: =T.BackButtonAccessibleLabel
                Color: =Color.White
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Height: =54
                Icon: =Icon.ChevronLeft
                OnSelect: |-
                    =If(gblAppCache.IsUserMaintenanceWorker,
                        // then:
                        Back(),
                        // else:
                        UpdateContext({locScreenMode:C.Creation.SearchWithScan});
                    );
                    Reset(cmpSearchBarMRCreate);
                    Reset(btnBarcodeScanner);
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                TabIndex: =0
                Width: =56
                X: =2
                Y: =2
                ZIndex: =4

        cmpSearchBarMRCreate As SearchBarWithInput:
            AccessibleLabel: =T.SearchAccessibleLabel
            backgroundColor: =gblAppStyles.Header.Fill
            LayoutMinHeight: =640
            LayoutMinWidth: =640
            searchFillColor: =gblAppStyles.SearchBar.Fill
            SearchHintText: =T.SearchHintLabel
            textFont: =gblAppStyles.CommonFont
            TextInput: =locSearchBarInputText
            textSize: =gblAppStyles.FontSize_Large
            Width: =Parent.Width
            ZIndex: =2

        conSearchMRPills As groupContainer.horizontalAutoLayoutContainer:
            Fill: =gblAppColors.Primary
            FillPortions: =0
            Height: =62
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutGap: =10
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =16
            PaddingRight: =16
            Visible: =locCreationType = C.Creation.CreateMaintenanceRequest
            ZIndex: =3

            btnAssets As button:
                BorderThickness: =0
                Color: =If(locFilterOption = C.Creation.SearchAssets,gblAppStyles.Pills.PressedColor,gblAppStyles.Pills.FontColor)
                Fill: =If(locFilterOption = C.Creation.SearchAssets,gblAppStyles.Pills.PressedFill,gblAppStyles.Pills.Fill)
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Font: =gblAppStyles.Pills.Font
                FontWeight: =gblAppStyles.Pills.FontWeight
                Height: =gblAppStyles.Pills.Height
                OnSelect: |-
                    =UpdateContext({locFilterOption:C.Creation.SearchAssets})
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =1000
                RadiusBottomRight: =1000
                RadiusTopLeft: =1000
                RadiusTopRight: =1000
                Size: =gblAppStyles.Pills.FontSize
                Text: =T.AssetsLabel
                Width: =74
                ZIndex: =1

            btnLocations As button:
                BorderThickness: =0
                Color: =If(locFilterOption = C.Creation.SearchFunctionalLocations,gblAppStyles.Pills.PressedColor,gblAppStyles.Pills.FontColor)
                Fill: =If(locFilterOption = C.Creation.SearchFunctionalLocations,gblAppStyles.Pills.PressedFill,gblAppStyles.Pills.Fill)
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Font: =gblAppStyles.Pills.Font
                FontWeight: =gblAppStyles.Pills.FontWeight
                Height: =gblAppStyles.Pills.Height
                OnSelect: |-
                    =UpdateContext({locFilterOption:C.Creation.SearchFunctionalLocations})
                PressedBorderColor: =
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =1000
                RadiusBottomRight: =1000
                RadiusTopLeft: =1000
                RadiusTopRight: =1000
                Size: =gblAppStyles.Pills.FontSize
                Text: =T.FunctionalLocationsLabel
                Width: =164
                ZIndex: =2

        galAssets As gallery.galleryVertical:
            '#CopilotOverlayLabel': ="Filtered"
            AccessibleLabel: =T.AssetsGalleryAccessibleLabel
            AlignInContainer: =AlignInContainer.SetByContainer
            Items: |-
                =If(
                    Self.Visible,
                    Search(Assets,cmpSearchBarMRCreate.SearchText,mserp_maintenanceassettypeid,mserp_maintenanceassetid),
                    Blank()
                )
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            OnSelect: |-
                =Switch(
                    locCreationType,
                    C.Creation.CreateMaintenanceRequest,
                    Select(btnCreateMR_Hidden),
                    C.Creation.CreateWorkOrder,
                    Select(btnCreateWO_Hidden)
                )
            ShowScrollbar: =false
            TemplateSize: =100
            Visible: =!false And locFilterOption = C.Creation.SearchAssets And Not IsBlank(cmpSearchBarMRCreate.SearchText)
            Width: =Parent.Width
            ZIndex: =4

            recAssetDivider As rectangle:
                BorderStyle: =BorderStyle.None
                Fill: =gblAppColors.Divider
                Height: =1
                Width: =1356
                Y: =Parent.TemplateHeight - Self.Height
                ZIndex: =1

            conAssetTemplate As groupContainer.verticalAutoLayoutContainer:
                Height: =Parent.TemplateHeight
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =5
                PaddingTop: =5
                Width: =Parent.TemplateWidth
                ZIndex: =2

                conAssetDetails As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =30
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =16
                    PaddingRight: =10
                    ZIndex: =1

                    icoAssetDetails As icon.Manufacture:
                        Color: =gblAppColors.AccentPositive
                        Fill: =gblAppColors.Background
                        Height: =gblAppStyles.Icons.Height
                        Icon: =Icon.Manufacture
                        Width: =gblAppStyles.Icons.Width
                        ZIndex: =1

                    lblAssetDetails As label:
                        Color: =gblAppStyles.Label.FontColor
                        FillPortions: =1
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        LayoutMinWidth: =50
                        Size: =gblAppStyles.Label.FontSize
                        Text: =ThisItem.mserp_maintenanceassettypeid
                        Wrap: =false
                        ZIndex: =2

                    lblAssetListLE As label:
                        Align: =Align.Right
                        Color: =gblAppStyles.Label.FontColor
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =Parent.Height
                        LayoutMinWidth: =70
                        Size: =gblAppStyles.Label.FontSize
                        Text: =Upper(ThisItem.mserp_dataareaid)
                        Width: =80
                        Wrap: =false
                        ZIndex: =3

                conAssetTypeDetails As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =60
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =30
                    LayoutMinWidth: =200
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =10
                    PaddingLeft: =16
                    PaddingRight: =10
                    Width: =Parent.Width
                    ZIndex: =2

                    lblAssetType As label:
                        Color: =gblAppColors.Accent
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =30
                        LayoutMinWidth: =100
                        PaddingLeft: =0
                        Size: =gblAppStyles.FontSize_Large
                        Text: =ThisItem.mserp_name
                        Width: =Parent.Width - Self.X
                        Wrap: =false
                        ZIndex: =1

                    lblAssetId As label:
                        Color: =gblAppStyles.Label.FontColor
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =30
                        LayoutMinWidth: =100
                        PaddingLeft: =0
                        Size: =gblAppStyles.FontSize_Large
                        Text: =ThisItem.mserp_maintenanceassetid
                        Width: =Parent.Width - Self.X
                        Wrap: =false
                        ZIndex: =2

            btnCreateMR_Hidden As button:
                Height: =20
                OnSelect: |-
                    =IfError(
                        //try
                        UpdateContext(
                            {
                                locDefaultRequestType: 
                                LookUp('Asset management parameters (mserp)', 'Company Code' = ThisItem.'Company Code', 'Maintenance request type')
                            }
                        ),
                        //catch
                        Notify(T.Error_FailedRetrievingDefaultRequestType, NotificationType.Error);
                        Trace("Could not retrieve default request type", TraceSeverity.Error, FirstError);
                    );
                    
                    IfError(
                        //try
                        UpdateContext(
                            {
                                locDefaultServiceLevel: 
                                First
                                (
                                    SortByColumns( 
                                        Filter(
                                            'Asset management maintenance service levels V2 (mserp)',              
                                            'Asset type' = ThisItem.'Asset type' || IsBlankOrError('Asset type'),
                                            'Functional location' = ThisItem.'Functional location' || IsBlankOrError('Functional location'),
                                            Asset = ThisItem.'Asset (mserp_maintenanceassetid)' || IsBlankOrError(Asset),
                                            'Manufacturer (mserp_productid)' = ThisItem.Manufacturer || IsBlankOrError('Manufacturer (mserp_modelproductid)'),
                                            Model = ThisItem.Model || IsBlankOrError(Model),
                                            IsBlankOrError('Work order type'),
                                            'Company Code' = ThisItem.'Company Code'
                                        ),
                                        "mserp_functionallocationid", SortOrder.Descending,
                                        "mserp_maintenanceassetid", SortOrder.Descending,
                                        "mserp_productid", SortOrder.Descending,
                                        "mserp_workordertypeid", SortOrder.Descending,
                                        "mserp_modelid", SortOrder.Descending,
                                        "mserp_maintenanceassettypeid", SortOrder.Descending
                                    )
                                ).Name
                            }
                        );
                        
                        //If there is no setup for service level an error should be thrown but creation of MR should be allowed.
                        If(
                            IsBlankOrError(locDefaultServiceLevel),
                            Notify(T.Error_MaintenanceRequestDefaultServiceLevelSetupMissing);
                            Trace("Missing service level setup", TraceSeverity.Error, {DefaultServiceLevel:locDefaultServiceLevel});
                        ),
                    
                        //catch
                        Notify(T.Error_FailedRetrievingDefaultServiceLevel, NotificationType.Error);
                        Trace("Failed getting default service level", TraceSeverity.Error, FirstError);
                    );
                    
                    
                    Reset(cmpSearchBarMRCreate);
                    Navigate(
                        'Maintenance Request Create Submit Screen',
                        ScreenTransition.None,
                        {
                            locAsset:ThisItem, 
                            locCreateMode:C.Creation.CreateFromAsset,
                            locDefaultRequestType: locDefaultRequestType,
                            locDefaultServiceLevel: locDefaultServiceLevel
                        }
                    );
                Size: =8
                Text: ="Create MR"
                Visible: =false
                Width: =80
                X: =Parent.TemplateWidth - Self.Width
                Y: =30
                ZIndex: =3

            btnCreateWO_Hidden As button:
                Height: =20
                OnSelect: |-
                    =IfError(
                        //try
                        UpdateContext(
                            {
                                locDefaultWorkOrderType: LookUp('Asset management parameters (mserp)', 'Company Code' = ThisItem.'Company Code', 'Work order type (mserp_defaultworkordertypeid)')
                            }
                        ),
                        //catch
                        Notify(T.Error_FailedRetrievingDefaultWorkOrderType, NotificationType.Error);
                        Trace("Could not retrieve default work order type", TraceSeverity.Error, FirstError);
                    );
                    
                    IfError(
                        //try
                        UpdateContext(
                            {
                                locDefaultServiceLevel: 
                                First
                                (
                                    SortByColumns( 
                                        Filter(
                                            'Asset management maintenance service levels V2 (mserp)',              
                                            'Asset type' = ThisItem.'Asset type' || IsBlankOrError('Asset type'),
                                            'Functional location' = ThisItem.'Functional location' || IsBlankOrError('Functional location'),
                                            Asset = ThisItem.'Asset (mserp_maintenanceassetid)' || IsBlankOrError(Asset),
                                            'Manufacturer (mserp_productid)' = ThisItem.Manufacturer || IsBlankOrError('Manufacturer (mserp_modelproductid)'),
                                            Model = ThisItem.Model || IsBlankOrError(Model),
                                            IsBlankOrError('Work order type'),
                                            'Company Code' = ThisItem.'Company Code'
                                        ),
                                        "mserp_functionallocationid", SortOrder.Descending,
                                        "mserp_maintenanceassetid", SortOrder.Descending,
                                        "mserp_productid", SortOrder.Descending,
                                        "mserp_workordertypeid", SortOrder.Descending,
                                        "mserp_modelid", SortOrder.Descending,
                                        "mserp_maintenanceassettypeid", SortOrder.Descending
                                    )
                                ).Name
                            }
                        );
                        
                        //If there is no setup for service level an error should be thrown but creation of MR should be allowed.
                        If(
                            IsBlankOrError(locDefaultServiceLevel),
                            Notify(T.Error_MaintenanceRequestDefaultServiceLevelSetupMissing);
                            Trace("Missing service level setup", TraceSeverity.Error, {DefaultServiceLevel:locDefaultServiceLevel});
                        ),
                    
                        //catch
                        Notify(T.Error_FailedRetrievingDefaultServiceLevel, NotificationType.Error);
                        Trace("Failed getting default service level", TraceSeverity.Error, FirstError);
                    );
                    
                    
                    Reset(cmpSearchBarMRCreate);
                    Navigate(
                        'Work Order Create Form Screen',
                        ScreenTransition.None,
                        {
                            locAsset: ThisItem,
                            locCreateMode: C.Creation.CreateFromAsset,
                            locDefaultWorkOrderType: locDefaultWorkOrderType,
                            locDefaultServiceLevel: locDefaultServiceLevel
                        }
                    );
                Size: =8
                Text: ="Create WO"
                Visible: =false
                Width: =80
                X: =Parent.TemplateWidth - Self.Width
                Y: =60
                ZIndex: =4

            recSelectableAssets As rectangle:
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Height: =conAssetTemplate.Height
                OnSelect: =Select(Parent)
                PressedFill: =RGBA(209, 209, 209, 0.4)
                TabIndex: =0
                Width: =conAssetTemplate.Width
                ZIndex: =5

        galLocations As gallery.galleryVertical:
            '#CopilotOverlayLabel': ="Filtered"
            AccessibleLabel: =T.LocationsGalleryAccessibleLabel
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =
            Items: |
                =If(
                    Self.Visible,
                    Search('Functional Locations',cmpSearchBarMRCreate.SearchText,mserp_functionallocationid,mserp_name),
                    Blank()
                )
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            OnSelect: |-
                =IfError(
                    //try    
                    UpdateContext(
                        {
                            locDefaultRequestType: 
                            LookUp('Asset management parameters (mserp)','Company Code' = ThisItem.'Company Code', 'Maintenance request type')
                            
                        }
                    ),
                    //catch
                    Notify(T.Error_FailedRetrievingDefaultRequestType, NotificationType.Error);
                    Trace("Could not retrieve default request type", TraceSeverity.Error, FirstError);
                );
                
                IfError(
                    //try
                    UpdateContext(
                        {
                            locDefaultServiceLevel: 
                            First
                            (
                                SortByColumns( 
                                    Filter(
                                            'Asset management maintenance service levels V2 (mserp)',
                                            'Functional location' = ThisItem.'Functional location (mserp_functionallocationid)' || IsBlankOrError('Functional location'),           
                                            IsBlankOrError('Asset type'),
                                            IsBlankOrError(Asset),
                                            IsBlankOrError('Manufacturer (mserp_productid)'),
                                            IsBlankOrError(Model),
                                            IsBlankOrError('Work order type'),
                                            'Company Code' = ThisItem.'Company Code'
                                    ),
                                    "mserp_functionallocationid" ,SortOrder.Descending
                                )
                            ).Name
                        }
                    );
                
                    If(
                        IsBlankOrError(locDefaultServiceLevel),
                        Notify(T.Error_MaintenanceRequestDefaultServiceLevelSetupMissing);
                        Trace("Missing service level setup", TraceSeverity.Error, {DefaultServiceLevel:locDefaultServiceLevel});
                    ),
                
                    //catch
                    Notify(T.Error_FailedRetrievingDefaultServiceLevel, NotificationType.Error);
                    Trace("Failed getting default service level", TraceSeverity.Error, FirstError);
                );
                
                Reset(cmpSearchBarMRCreate);
                Navigate(
                    'Maintenance Request Create Submit Screen',
                    ScreenTransition.None,
                    {
                        locLocation:ThisItem, 
                        locCreateMode:C.Creation.CreateFromLocation,
                        locDefaultRequestType: locDefaultRequestType,
                        locDefaultServiceLevel: locDefaultServiceLevel
                    }
                );
            ShowScrollbar: =false
            TemplateSize: =100
            Visible: =!false And locFilterOption = C.Creation.SearchFunctionalLocations And Not IsBlank(cmpSearchBarMRCreate.SearchText)
            Width: =Parent.Width
            ZIndex: =5

            conLocationsTemplate As groupContainer.verticalAutoLayoutContainer:
                Height: =Parent.TemplateHeight
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.TemplateWidth
                ZIndex: =1

                recLocationsDivider As rectangle:
                    BorderStyle: =BorderStyle.None
                    Fill: =gblAppColors.Divider
                    Height: =1
                    Width: =Parent.Width
                    ZIndex: =1

                conLocationsDetails As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =30
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =16
                    PaddingRight: =10
                    PaddingTop: =10
                    ZIndex: =2

                    icoLocationsDetails As icon.Manufacture:
                        Color: =RGBA(162, 126, 111, 1)
                        Height: =gblAppStyles.Icons.Height
                        Icon: =Icon.Waypoint
                        Width: =gblAppStyles.Icons.Width
                        ZIndex: =1

                    lblLocationsDetails As label:
                        Color: =gblAppStyles.Label.FontColor
                        FillPortions: =1
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Size: =gblAppStyles.Label.FontSize
                        Text: =ThisItem.mserp_functionallocationtypeid
                        Width: =180
                        Wrap: =false
                        ZIndex: =2

                    lblLocationListLE As label:
                        Align: =Align.Right
                        Color: =gblAppStyles.Label.FontColor
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =Parent.Height
                        LayoutMinWidth: =50
                        Size: =gblAppStyles.Label.FontSize
                        Text: =Upper(ThisItem.mserp_dataareaid)
                        Width: =80
                        Wrap: =false
                        ZIndex: =3

                conLocationsTypeDetails As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =60
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =30
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =10
                    PaddingLeft: =16
                    PaddingRight: =10
                    Width: =Parent.Width
                    ZIndex: =3

                    lblLocationType As label:
                        Color: =gblAppColors.Accent
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =30
                        LayoutMinWidth: =100
                        LineHeight: =22
                        Size: =gblAppStyles.FontSize_Large
                        Text: =ThisItem.mserp_name
                        Width: =Parent.Width -Self.X
                        Wrap: =false
                        ZIndex: =1

                    lblLocationId As label:
                        Color: =gblAppStyles.Label.FontColor
                        Font: =gblAppStyles.Label.Font
                        FontWeight: =gblAppStyles.Label.FontWeight
                        Height: =30
                        LayoutMinWidth: =50
                        LineHeight: =22
                        Size: =gblAppStyles.FontSize_Large
                        Text: =ThisItem.mserp_functionallocationid
                        Width: =Parent.Width -Self.X
                        Wrap: =false
                        ZIndex: =2

            recSelectableLocations As rectangle:
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =gblAppStyles.FocusBorderColor
                FocusedBorderThickness: =gblAppStyles.FocusBorderThickness
                Height: =conLocationsTemplate.Height
                OnSelect: =Select(Parent)
                PressedFill: =RGBA(209, 209, 209, 0.4)
                TabIndex: =0
                Width: =conLocationsTemplate.Width
                ZIndex: =2

        lblSearchMRGeneric As label:
            Align: =Align.Center
            AlignInContainer: =AlignInContainer.Center
            FillPortions: =1
            Font: =gblAppStyles.CommonFont
            FontWeight: =FontWeight.Semibold
            PaddingBottom: =100
            Size: =gblAppStyles.FontSize_Medium
            Text: |-
                =If(
                    locFilterOption = C.Creation.SearchAssets,
                    T.SearchByAssetLabel,
                    locFilterOption = C.Creation.SearchFunctionalLocations,
                    T.SearchByLocationLabel
                )
            Visible: =!(galAssets.Visible Or galLocations.Visible)
            Width: =Parent.Width
            Y: =
            ZIndex: =6

    cmpAboutOverlayMRCSS As AppAboutOverlay:
        AboutTitleText: =T.AboutHeaderLabel
        AppVersionText: =Substitute(T.AboutVersionLabel, "{VersionNumber}", gblAppVersion)
        AvailableLanguages: =gblAvailableLanguages
        CloseButtonText: =T.CloseButtonLabel
        ComponentInstanceName: ="cmpAboutOverlayMRCSS"
        CurrentSelectedLanguage: =gblLanguageCode
        FocusBorderColor: =gblAppStyles.FocusBorderColor
        FocusBorderThickness: =gblAppStyles.FocusBorderThickness
        LanguageChangeHeaderText: =T.AboutLanguageChangeHeaderLabel
        LanguageSelectionAccessibleLabel: =T.SelectLanguageAccessibleLabel
        OnCloseSelect: |-
            =UpdateContext({ varShowAboutDialog: false })
        OnLanguageChange: |-
            =ClearCollect(colLanguageChoice, {Value: LanguageId});
            SaveData(colLanguageChoice, "AppLanguageChoice");
            true
        ReturnFocus: ="imgPersonaPSH"
        TermsOfServiceHeaderText: =T.AboutTermsOfServiceHeaderLabel
        Visible: =varShowAboutDialog
        ZIndex: =6

