# ************************************************************************************************
# Warning: YAML source code for Canvas Apps is in preview. The schema is being actively developed.
# Content may be incomplete and subject to change.
# This file is read-only and should only be used to review changes made within Power Apps Studio.
# This file isn't used when loading the app. External editing, merging and conflict resolution are
# not supported.
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
Screens:
  Work Order Job Checklist Item Screen:
    Properties:
      Fill: =gblAppColors.Background
      OnHidden: |+
        =With(
            {
                locSelectedVariableValue: drpChecklistVariableValue.SelectedText.Value,
                locSelectedVariableCheckStatus: drpChecklistVariableValue.SelectedText.Result,
                locMeasurementCounterValue: Value(txtChecklistMeasurementCounterValue.Text)
            },
            If(
                ChecklistItem.'Note from maintenance worker' <> lblChecklistItemRemark.Text || ChecklistItem.'Variable value' <> locSelectedVariableValue || ChecklistItem.'Counter value' <> locMeasurementCounterValue,
                Patch(
                    'Asset management work order job maintenance checklist (mserp)',
                    ChecklistItem,
                    {
                        Checked: varIsChecklistItemChecked,
                        'Note from maintenance worker': lblChecklistItemRemark.Text,
                        'Variable value': locSelectedVariableValue,
                        'Counter value': locMeasurementCounterValue,
                        Result: Switch(
                            ChecklistItem.Type,
                            'Type (mserp)'.Variable,
                            If(locSelectedVariableCheckStatus <> Blank(), locSelectedVariableCheckStatus, 'Result (mserp)'.None),
                            'Type (mserp)'.Measurement,
                            If(
                            // Set Result to None if min and max threshold are 0
                                ChecklistItem.'Counter minimum value' = 0 && ChecklistItem.'Counter maximum value' = 0,
                                'Result (mserp)'.None,
                                If(
                                    ChecklistItem.'Counter minimum value' <= locMeasurementCounterValue && locMeasurementCounterValue <= ChecklistItem.'Counter maximum value',
                                    'Result (mserp)'.Pass,
                                    'Result (mserp)'.Fail
                                )
                            ),
                            'Result (mserp)'.None
                        )
                    }
                )
            );
        );
      OnVisible: |-
        =UpdateContext({ varIsChecklistItemChecked: ChecklistItem.Checked });
        Reset(lblChecklistItemRemark);

        // should go last
        Set(
            gblPreviousScreen,
            Self
        );
    Children:
      - conChecklistWrapper:
          Control: GroupContainer@1.3.0
          Variant: AutoLayout
          Properties:
            Height: =Parent.Height - Self.Y
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutOverflowY: =LayoutOverflow.Scroll
            Width: =Parent.Width
            Y: =cmpHeaderWOJCIS.Height
